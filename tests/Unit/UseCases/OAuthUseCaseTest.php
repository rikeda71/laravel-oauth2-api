<?php

namespace Tests\Unit\UseCases;

use App\Http\UseCases\OAuthUseCase;
use Illuminate\Http\JsonResponse;
use Mockery;
use PHPUnit\Framework\TestCase;

class OAuthUseCaseTest extends TestCase
{
    /**
     * @var \App\Http\Services\UserLoginService|Mockery\LegacyMockInterface|Mockery\MockInterface
     */
    private $userLoginService;

    /**
     * @var OAuthUseCase
     */
    private $target;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->userLoginService = Mockery::mock('App\Http\Services\UserLoginService');
        $this->target = new OAuthUseCase($this->userLoginService);
    }

    public function testExecute(): void
    {
        // given
        $provider = 'provider';
        $token = 'dummy';
        $this->userLoginService->shouldReceive('execute')
            ->withArgs([$provider])
            ->andReturn($token);
        // when
        $actual = $this->target->execute($provider);
        // then
        $this->assertEquals($token, $actual);
    }
}
